name: Update VERSION file and package release

on:
  push:
    tags:
      - "v*"  # Trigger only on tags starting with 'v'

permissions:
  contents: write

jobs:
  update_version_and_package:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Extract the version from the tag
      - name: Extract version from tag
        id: extract_version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "This workflow should be triggered by a tag."
            exit 1
          fi

      # Step 3: Update the VERSION file
      - name: Update VERSION file
        run: |
          echo "$VERSION" > VERSION
          cat VERSION

      # Step 4: Commit changes
      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add VERSION
            git commit -m "Update VERSION file to $VERSION"
            git push origin HEAD:refs/heads/master
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Create a tar.gz package
      - name: Package the repository
        run: |
          mkdir -p build
          tar -czvf build/zhub.tar.gz --exclude=.git .

      # Step 6: Get the latest release tag
      - name: Get latest release tag
        id: get_latest_release
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      # Step 7: Get commits since the last release
      - name: Get commits
        id: get_commits
        run: |
          COMMITS=$(git log $LATEST_TAG..HEAD --pretty=format:"- [%s](https://github.com/jadenzaleski/zhub/commit/%H)")
          echo "COMMITS=$COMMITS" >> $GITHUB_ENV

      # Step 8: Create GitHub release
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: build/zhub.tar.gz
          body: |
            ## Changes:
            ${{ env.COMMITS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}