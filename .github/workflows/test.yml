name: test workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous release tag
        id: get_previous_release
        run: |
          git fetch --all
          git fetch --tags --force

          # Get the latest tag
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          
          # Get the previous tag
          PREVIOUS_TAG=$(git tag --sort=version:refname | grep -B 1 "$LATEST_TAG" | head -n 1)
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV

      - name: Get commits
        id: get_commits
        run: |
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found. Showing all commits."
            COMMITS=$(git log --pretty=format:"- %h: %s")
          elif [ "$PREVIOUS_TAG" == "$LATEST_TAG" ]; then
            echo "Previous and latest tags are the same. Showing all commits."
            COMMITS=$(git log --pretty=format:"- %h: %s")
          else
            echo "Fetching commits between $PREVIOUS_TAG and $LATEST_TAG."
            COMMITS=$(git log $PREVIOUS_TAG..$LATEST_TAG --pretty=format:"- %h: %s")
          fi

          if [ -z "$COMMITS" ]; then
            echo "No commits found."
          fi

          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Output Commits
        run: |
          echo "Commits between tags:"
          printf "%s\n" "${{ env.COMMITS }}"
